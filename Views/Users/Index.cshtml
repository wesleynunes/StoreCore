@model PaginatedList<StoreCore.Data.ApplicationUser>

@{
    ViewData["Title"] = "Usuario";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<h1>Usuário</h1>
@if (TempData["MessageUser"] != null)
{
    <div class="alert alert-success">
        @TempData["MessageUser"]
    </div>
}

<hr />

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a class="btn btn-primary btn-sm" asp-action="Create">Cadastrar</a></li>
    </ol>
</nav>

<form class="float-right margin-bottom-20" asp-action="Index" method="get">
    <div class="input-group">
        <input class="form-control" placeholder="Pesquisar por usuário" aria-label="Recipient's username" name="SearchString" type="text" value="@ViewData["CurrentFilter"]">
        <div class="input-group-append">
            <button type="submit" class="btn btn-outline-primary"><i class="fas fa-search"></i></button>
            <a asp-action="Index" class="btn btn-outline-secondary btn-sm center">Limpar</a>
        </div>
    </div>
</form>


<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData[" NameSortParm"]" asp-route-currentFilter="@ViewData[" CurrentFilter"]">Usuário</a>
            </th>
            <th>
                Email Confirmado
            </th>
            <th>
                Fim do bloqueio
            </th>
            <th>
                Bloqueio ativado
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailConfirmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LockoutEnd)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LockoutEnabled)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary btn-sm">Detalhes</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Deletar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData[" CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData[" CurrentFilter"]"
   class="btn btn-outline-dark btn-sm @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-dark btn-sm @nextDisabled">
    Próximo
</a>